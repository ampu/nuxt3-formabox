@mixin visually-hidden() {
  position: absolute;
  z-index: -9999;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  clip-path: inset(100%);
  clip: rect(0 0 0 0);

  white-space: nowrap;
  overflow: hidden;

  border: none;
}

@mixin mobile {
  @media screen and (max-width: $width--tablet - 1px) {
    @content;
  }
}

@mixin tablet {
  @media screen and (min-width: $width--tablet) and (max-width: $width--notebook - 1px) {
    @content;
  }
}

@mixin notebook {
  @media screen and (min-width: $width--notebook) and (max-width: $width--desktop - 1px) {
    @content;
  }
}

@mixin desktop {
  @media screen and (min-width: $width--desktop) and (max-width: $width--tv - 1px) {
    @content;
  }
}

@mixin tv {
  @media screen and (min-width: $width--tv) {
    @content;
  }
}

@mixin notebook-tablet {
  @media screen and (min-width: $width--tablet) and (max-width: $width--desktop - 1px) {
    @content;
  }
}

@mixin container {
  display: flex;
  flex-flow: column;
  margin-left: auto;
  margin-right: auto;
  width: $width--tv;
  max-width: 100%;

  @include desktop {
    width: $width--desktop;
  }

  @include notebook {
    width: $width--notebook;
  }

  @include tablet {
    width: $width--tablet;
  }

  @include mobile {
    width: $width--mobile;
  }
}

@mixin padding {
  padding-left: $padding--tv;
  padding-right: $padding--tv;

  @include desktop {
    padding-left: $padding--desktop;
    padding-right: $padding--desktop;
  }

  @include notebook {
    padding-left: $padding--notebook;
    padding-right: $padding--notebook;
  }

  @include tablet {
    padding-left: $padding--tablet;
    padding-right: $padding--tablet;
  }

  @include mobile {
    padding-left: $padding--mobile;
    padding-right: $padding--mobile;
  }
}

@mixin right {
  right: $padding--tv;

  @include desktop {
    right: $padding--desktop;
  }

  @include notebook {
    right: $padding--notebook;
  }

  @include tablet {
    right: $padding--tablet;
  }

  @include mobile {
    right: $padding--mobile;
  }
}

@mixin link {
  color: inherit;
  text-decoration: none;

  &:hover {
    text-decoration: underline;
  }
}

@mixin level($size, $stroke-width:3px, $stroke-linecap:butt) {
  $pi: 3.1415926536;

  width: $size;
  height: $size;

  .level-svg {
    width: $size;
    height: $size;
  }

  .level-svg circle {
    transition: stroke-dashoffset 0.3s ease;

    $value: var(--level, 33.3);
    $slide: var(--slide, 0);
    $radius: calc(($size - $stroke-width) / 2);
    $perimeter: calc(2 * $pi * $radius);
    $perimeterPercentage: calc($perimeter / 100);

    cx: calc($size / 2);
    cy: calc($size / 2);
    r: calc(($size - $stroke-width) / 2);
    stroke-width: $stroke-width;
    stroke-linecap: $stroke-linecap;
    stroke-dashoffset: calc(2 * $pi * ($size - $stroke-width) / 2 * (1 / 4 - $slide / 3));
    stroke-dasharray: calc($value * $perimeterPercentage) calc($perimeter - $value * $perimeterPercentage);
  }
}
